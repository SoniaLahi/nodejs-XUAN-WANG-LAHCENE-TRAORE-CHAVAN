// Generated by CoffeeScript 1.6.3
var app, express, http, metric_get, metrics, stylus;

http = require('http');

stylus = require('stylus');

express = require('express');

metrics = require('./metrics');

app = express();

app.set('views', __dirname + '/../views');

app.set('view engine', 'jade');

app.use(express.bodyParser());

app.use(express.methodOverride());

app.use(express.cookieParser('your secret here'));

app.use(express.session());

app.use(app.router);

app.use(stylus.middleware("" + __dirname + "/../public"));

app.use(express["static"]("" + __dirname + "/../public"));

app.use(express.errorHandler({
  showStack: true,
  dumpExceptions: true
}));

app.use(function(req, res, next) {
  if (req.is("text/*")) {
    req.text = "";
    req.setEncoding("utf8");
    req.on("data", function(chunk) {
      return req.text += chunk;
    });
    return req.on("end", next);
  } else {
    return next();
  }
});

app.get('/', function(req, res) {
  return res.render('index', {
    title: 'Metrics'
  });
});

app.get('/login', function(req, res) {
  return res.render('login', {
    title: 'Identification'
  });
});

metric_get = function(req, res, next) {
  return metrics.get(req.params.id, function(err, values) {
    if (err) {
      return next(err);
    }
    return res.json({
      id: req.params.id,
      values: values
    });
  });
};

app.get('/metrics/:id.json', metric_get);

app.get('/metrics?metric=:id', metric_get);

app.post('/metrics/:id.json', function(req, res, next) {
  var values;
  console.log('robin !!!');
  console.log('id: ' + req.params.id);
  console.log(req.body.metrics);
  console.log('robin finish!!!');
  values = req.body.metrics;
  if (typeof values !== "undefined") {
    return metrics.save(req.params.id, values, function(err) {
      if (err) {
        return next(err);
      }
      return res.json({
        status: 'OK'
      });
    });
  } else {
    return res.json({
      status: 'OK'
    });
  }
});

app.del('/metrics/:id.json', function(req, res, next) {
  console.log("remove id : " + req.params.id);
  return metrics.remove(req.params.id, function(err) {
    if (err) {
      return next(err);
    }
    return res.json({
      status: 'OK'
    });
  });
});

http.createServer(app).listen(1234, function() {
  return console.log('http://localhost:1234');
});
